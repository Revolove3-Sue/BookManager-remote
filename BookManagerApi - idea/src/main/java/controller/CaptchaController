package com.rabbiter.bms.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpServletResponse;
import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;

@RestController
@RequestMapping("/captcha")
public class CaptchaController {

    @GetMapping
    public void generateCaptcha(HttpSession session, HttpServletResponse response) throws IOException {
        // 生成验证码文本
        String captcha = generateCaptchaText();

        // 将验证码存储到 Session 中
        session.setAttribute("captcha", captcha);  // 将验证码文本存储到 HttpSession

        // 创建验证码图像
        BufferedImage captchaImage = createCaptchaImage(captcha);

        // 设置响应内容类型为图片
        response.setContentType("image/png");
        ImageIO.write(captchaImage, "PNG", response.getOutputStream());
    }

    private String generateCaptchaText() {
        // 生成一个随机的 4 位数字验证码
        Random random = new Random();
        StringBuilder captcha = new StringBuilder();
        for (int i = 0; i < 4; i++) {
            captcha.append(random.nextInt(10));  // 生成随机数字
        }
        return captcha.toString();
    }

    private BufferedImage createCaptchaImage(String captchaText) {
        // 创建图像并绘制验证码
        int width = 100, height = 40;
        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = (Graphics2D) image.getGraphics();

        // 设置背景和边框
        graphics.setColor(Color.LIGHT_GRAY);
        graphics.fillRect(0, 0, width, height);
        graphics.setColor(Color.BLACK);
        graphics.drawRect(0, 0, width - 1, height - 1);

        // 设置字体
        graphics.setFont(new Font("Arial", Font.BOLD, 30));

        // 绘制验证码文本
        graphics.setColor(Color.BLACK);
        graphics.drawString(captchaText, 10, 30);

        graphics.dispose();

        return image;
    }
}
